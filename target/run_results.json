{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.6", "generated_at": "2025-06-08T17:21:43.035975Z", "invocation_id": "0049030b-76b5-47b4-b100-a5505d1fa347", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.941115Z", "completed_at": "2025-06-08T17:21:42.956753Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:42.956753Z", "completed_at": "2025-06-08T17:21:42.956753Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01563882827758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.956753Z", "completed_at": "2025-06-08T17:21:42.956753Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:42.956753Z", "completed_at": "2025-06-08T17:21:42.956753Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01563882827758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.956753Z", "completed_at": "2025-06-08T17:21:42.956753Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:42.956753Z", "completed_at": "2025-06-08T17:21:42.956753Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01563882827758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_payments", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.972844Z", "completed_at": "2025-06-08T17:21:42.988530Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:42.988530Z", "completed_at": "2025-06-08T17:21:42.988530Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03177642822265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status as order_status,\n        created_at,\n        updated_at\n    from \"jaffle_shop\".\"main\".\"raw_orders\"\n)\n\nselect * from orders", "relation_name": "\"jaffle_shop\".\"main\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.972844Z", "completed_at": "2025-06-08T17:21:42.988530Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:42.988530Z", "completed_at": "2025-06-08T17:21:42.988530Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03177642822265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_payments", "compiled": true, "compiled_code": "\n\nwith payments as (\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n        amount / 100.0 as amount_usd,\n        created_at,\n        updated_at\n    from \"jaffle_shop\".\"main\".\"raw_payments\"\n    where status = 'success'\n)\n\nselect * from payments", "relation_name": "\"jaffle_shop\".\"main\".\"stg_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.972844Z", "completed_at": "2025-06-08T17:21:42.972844Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:42.988530Z", "completed_at": "2025-06-08T17:21:42.988530Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03177642822265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "\n\nwith customers as (\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email,\n        created_at,\n        updated_at\n    from \"jaffle_shop\".\"main\".\"raw_customers\"\n)\n\nselect * from customers", "relation_name": "\"jaffle_shop\".\"main\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.988530Z", "completed_at": "2025-06-08T17:21:43.004192Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:43.004192Z", "completed_at": "2025-06-08T17:21:43.004192Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015662193298339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.fct_orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n    select * from \"jaffle_shop\".\"main\".\"stg_orders\"\n),\n\npayments as (\n    select\n        order_id,\n        sum(amount_usd) as total_amount\n    from \"jaffle_shop\".\"main\".\"stg_payments\"\n    group by order_id\n),\n\nfinal as (\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.order_status,\n        coalesce(payments.total_amount, 0) as amount,\n        orders.created_at,\n        orders.updated_at\n    from orders\n    left join payments on orders.order_id = payments.order_id\n)\n\nselect * from final", "relation_name": "\"jaffle_shop\".\"main\".\"fct_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:42.988530Z", "completed_at": "2025-06-08T17:21:43.004192Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:43.004192Z", "completed_at": "2025-06-08T17:21:43.004192Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015662193298339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.dim_customers", "compiled": true, "compiled_code": "\n\nwith customers as (\n    select * from \"jaffle_shop\".\"main\".\"stg_customers\"\n),\n\ncustomer_orders as (\n    select\n        customer_id,\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n    from \"jaffle_shop\".\"main\".\"stg_orders\"\n    group by customer_id\n),\n\ncustomer_payments as (\n    select\n        orders.customer_id,\n        sum(payments.amount_usd) as lifetime_value\n    from \"jaffle_shop\".\"main\".\"stg_orders\" orders\n    left join \"jaffle_shop\".\"main\".\"stg_payments\" payments\n        on orders.order_id = payments.order_id\n    group by orders.customer_id\n),\n\nfinal as (\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customers.email,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders,\n        coalesce(customer_payments.lifetime_value, 0) as lifetime_value,\n        customers.created_at,\n        customers.updated_at\n    from customers\n    left join customer_orders on customers.customer_id = customer_orders.customer_id\n    left join customer_payments on customers.customer_id = customer_payments.customer_id\n)\n\nselect * from final", "relation_name": "\"jaffle_shop\".\"main\".\"dim_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:43.012702Z", "completed_at": "2025-06-08T17:21:43.022469Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:43.022469Z", "completed_at": "2025-06-08T17:21:43.022469Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018277406692504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.jaffle_shop.simple_order_analysis", "compiled": true, "compiled_code": "-- Simple Order Analysis\n-- Basic order patterns\n\nselect \n    order_status,\n    count(*) as order_count,\n    sum(amount) as total_amount,\n    avg(amount) as avg_amount,\n    \n    -- Percentage of total orders\n    round(100.0 * count(*) / sum(count(*)) over(), 1) as pct_of_orders\n    \nfrom \"jaffle_shop\".\"main\".\"fct_orders\"\ngroup by order_status\norder by order_count desc", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:43.020932Z", "completed_at": "2025-06-08T17:21:43.022469Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:43.022469Z", "completed_at": "2025-06-08T17:21:43.022469Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009767293930053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.revenue_by_month", "compiled": true, "compiled_code": "\n\nwith monthly_revenue as (\n    select\n        date_trunc('month', order_date) as order_month,\n        sum(amount) as monthly_revenue,\n        count(distinct order_id) as monthly_orders,\n        count(distinct customer_id) as monthly_customers,\n        avg(amount) as avg_order_value\n    from \"jaffle_shop\".\"main\".\"fct_orders\"\n    where order_status not in ('returned', 'cancelled')\n    group by date_trunc('month', order_date)\n)\n\nselect \n    order_month,\n    monthly_revenue,\n    monthly_orders,\n    monthly_customers,\n    avg_order_value,\n    lag(monthly_revenue) over (order by order_month) as prev_month_revenue,\n    (monthly_revenue - lag(monthly_revenue) over (order by order_month)) / \n        lag(monthly_revenue) over (order by order_month) * 100 as revenue_growth_pct\nfrom monthly_revenue\norder by order_month", "relation_name": "\"jaffle_shop\".\"main\".\"revenue_by_month\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:43.022469Z", "completed_at": "2025-06-08T17:21:43.022469Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:43.022469Z", "completed_at": "2025-06-08T17:21:43.022469Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009767293930053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.jaffle_shop.simple_customer_analysis", "compiled": true, "compiled_code": "-- Simple Customer Analysis\n-- Shows customer behavior in easy-to-understand format\n\nselect \n    customer_id,\n    first_name,\n    last_name,\n    number_of_orders,\n    lifetime_value,\n    \n    -- Simple customer categories\n    case \n        when number_of_orders = 1 then 'One-time Customer'\n        when number_of_orders <= 3 then 'Regular Customer'\n        else 'Loyal Customer'\n    end as customer_type,\n    \n    -- Simple value categories\n    case \n        when lifetime_value < 100 then 'Low Spender'\n        when lifetime_value < 300 then 'Medium Spender'\n        else 'High Spender'\n    end as spending_level\n    \nfrom \"jaffle_shop\".\"main\".\"dim_customers\"\nwhere number_of_orders > 0\norder by lifetime_value desc\nlimit 20", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-08T17:21:43.012702Z", "completed_at": "2025-06-08T17:21:43.022469Z"}, {"name": "execute", "started_at": "2025-06-08T17:21:43.022469Z", "completed_at": "2025-06-08T17:21:43.022469Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018277406692504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.jaffle_shop.simple_revenue_analysis", "compiled": true, "compiled_code": "-- Simple Revenue Analysis\n-- Monthly revenue summary\n\nselect \n    date_trunc('month', order_date) as month,\n    count(*) as total_orders,\n    sum(amount) as total_revenue,\n    avg(amount) as average_order_value,\n    count(distinct customer_id) as unique_customers\n    \nfrom \"jaffle_shop\".\"main\".\"fct_orders\"\nwhere order_status = 'completed'\ngroup by date_trunc('month', order_date)\norder by month desc", "relation_name": null, "batch_results": null}], "elapsed_time": 0.36034679412841797, "args": {"warn_error_options": {"include": [], "exclude": []}, "use_colors": true, "state_modified_compare_more_unrendered_values": false, "state_modified_compare_vars": false, "log_file_max_bytes": 10485760, "require_resource_names_without_spaces": false, "require_explicit_package_overrides_for_builtin_materializations": true, "which": "compile", "macro_debugging": false, "inject_ephemeral_ctes": true, "require_yaml_configuration_for_mf_time_spines": false, "source_freshness_run_project_hooks": false, "printer_width": 80, "strict_mode": false, "log_format": "default", "log_path": "C:\\Users\\KBHATIA\\jaffle_shop\\logs", "use_colors_file": true, "log_level": "info", "cache_selected_only": false, "favor_state": false, "output": "text", "empty": false, "require_nested_cumulative_type_params": false, "partial_parse": true, "populate_cache": true, "profiles_dir": "C:\\Users\\KBHATIA\\.dbt", "exclude": [], "indirect_selection": "eager", "project_dir": "C:\\Users\\KBHATIA\\jaffle_shop", "defer": false, "invocation_command": "dbt compile", "print": true, "partial_parse_file_diff": true, "vars": {}, "select": [], "require_batched_execution_for_custom_microbatch_strategy": false, "log_format_file": "debug", "static_parser": true, "show_resource_report": false, "introspect": true, "send_anonymous_usage_stats": true, "skip_nodes_if_on_run_start_fails": false, "version_check": true, "write_json": true, "log_level_file": "debug", "quiet": false}}